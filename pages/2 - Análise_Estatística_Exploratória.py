from io import StringIO
import streamlit as st
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import streamlit.components.v1 as components
import plotly.express as px

import branca.colormap as cm
from branca.colormap import linear

import folium
import json
from streamlit_folium import st_folium

from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn import tree
from sklearn.tree import DecisionTreeRegressor
import matplotlib.pyplot as plt
import globals
import plotly.graph_objects as go

import geopandas as gpd

import os

# Set page configuration
st.set_page_config(layout='wide')

st.title("An√°lise Estat√≠stica Explorat√≥ria üìä")
st.subheader("An√°lise de dados")


# file = st.file_uploader("Fa√ßa upload do seu arquivo", type=['csv'])

# if file is not None:

df =  globals.current_database

# st.write(df)


st.info('Mapa da vari√°vel alvo', icon='üåé')
st.subheader('Mapa da vari√°vel alvo')

def generate_map():
    # Convert the DataFrame to a GeoDataFrame
    gdf = gpd.read_file('PE_Municipios_2022.zip')
    gdf = gdf.merge(df[[df.columns[0],df.columns[-1]]], left_on='NM_MUN', right_on=df.columns[0])

    fig, ax = plt.subplots(1, 1)

    df[df.columns[-1]] = df[df.columns[-1]].round(2)

    m = gdf.explore(df.columns[-1], cmap='RdBu')

    components.html(m._repr_html_(), height=600)

    outfp = r"mapa.html"

    m.save(outfp)

with st.spinner('Gerando mapa...'):
    if os.path.exists('mapa.html'):
      m_repr_html_ = open('mapa.html').read()
      components.html(m_repr_html_, height=600)
    else:
        generate_map()
st.info('Figura 1 - Mapa do Estado de Pernambuco')

st.markdown(''' A figura 1 exibe uma an√°lise geoespacial das notas de profici√™ncia dos estudantes,  no √¢mbito da educa√ß√£o b√°sica. As diferentes tonalidades de cores no mapa indicam varia√ß√µes nos n√≠veis de profici√™ncia entre os diversos munic√≠pios. A imagem, portanto, oferece uma vis√£o detalhada e regionalizada do desempenho educacional no estado de Pernambuco, evidenciando as disparidades entre diferentes munic√≠pios.
Este tipo de visualiza√ß√£o √© essencial para identificar regi√µes que necessitam de interven√ß√µes educacionais mais intensivas e ajuda a entender as disparidades educacionais entre diferentes regi√µes, contribuindo para pol√≠ticas p√∫blicas mais informadas e direcionadas. 
''')

with st.container(border=True) as container1:
    st.markdown(''' **Interpreta√ß√£o do Mapa** \n
        Tonalidades de Cores: \n
        -Cores Vermelhas: Indicam √°reas com menores notas de profici√™ncia, sugerindo um desempenho educacional mais baixo.\n
        -Cores Azuis: Representam √°reas com maiores notas de profici√™ncia, indicando um desempenho educacional superior.\n
        -Cores Mais Escuras: Correspondem aos extremos dos n√≠veis de profici√™ncia, onde as cores vermelhas mais escuras representam os piores desempenhos e as cores azuis mais escuras representam os melhores desempenhos.\n''')
    
st.info(f'Munic√≠pio x {df.columns[-1]}', icon='üåé')

st.subheader('An√°lise Estat√≠stica')
# Calculate correlation
# dfmc = df.pivot_table(index=df.columns[0], values=df.columns[-1], aggfunc='mean')
dfmc = df.groupby(df.columns[0])[df.columns[-1]].apply(lambda x: x.mode().iloc[0]).reset_index()
# dfm = df.pivot_table(index=df.columns[0], values=df.columns[3:], aggfunc='mean')
dfm = df.groupby(df.columns[0])[df.columns[3:]].apply(lambda x: x.mode().iloc[0]).reset_index()

dfmc[dfmc.columns[-1]] = dfmc[dfmc.columns[-1]].round(2)
# dfm = df.pivot_table(index=df.columns[0], values=df.columns[3:-1], aggfunc=['mean','std'])
# dfm.columns = dfm.iloc[0]
# dfm = dfm[1:]
# st.write(dfm.head(5))




st.markdown('Estat√≠sticas')
st.dataframe(dfmc[dfmc.columns[-1]].describe().to_frame().T)

st.divider()

st.markdown("O gr√°fico abaixo mostra a distribui√ß√£o da vari√°vel resposta por munic√≠pio. Permite visualizar Munic√≠pios com valores extremos e dispers√£o em torno da m√©dia.")
fig = px.scatter(
dfmc.reset_index(),
x="Munic√≠pio",
y=dfmc.columns[-1],
# size=dfmc.columns[-1],
hover_name="Munic√≠pio",
color=dfmc.columns[-1],
color_continuous_scale='icefire_r',
size_max=60,
)

fig.update_layout(
autosize=False,
width=800,
height=500,
shapes=[
    dict(
        type="rect",
        xref="paper",
        yref="paper",
        x0=0,
        y0=0,
        x1=1,
        y1=1,
        line=dict(
            color="Grey",
            width=1,
            )
        )
    ]
)

# Show the scatterplot in Streamlit
st.plotly_chart(fig, use_container_width=True)
st.info('Gr√°fico 1: gr√°fico de dispers√£o da distribui√ß√£o das notas de profici√™ncia dos estudantes por munic√≠pios')
st.markdown(''' O gr√°fico 1 faz parte de uma an√°lise estat√≠stica mais ampla apresentada no relat√≥rio, que visa explorar a variabilidade e o desempenho educacional em todo o estado. O gr√°fico 1 permite identificar visualmente quais munic√≠pios apresentam desempenhos extremos, tanto positivos quanto negativos, e como as notas est√£o dispersas em rela√ß√£o √† m√©dia. Esta visualiza√ß√£o facilita a identifica√ß√£o de √°reas que necessitam de maior aten√ß√£o e recursos.
''')
with st.container(border=True) as container2:
    st.markdown(''' **An√°lise do Gr√°fico de Dispers√£o** \n
    **Eixos do Gr√°fico** \n
    -Eixo X: Representa os munic√≠pios de Pernambuco. Cada ponto ao longo deste eixo corresponde a um munic√≠pio espec√≠fico.\n
    -Eixo Y: Representa as notas de profici√™ncia dos estudantes, variando de aproximadamente 0,43 a 0,70.\n
    **Distribui√ß√£o das Notas:** \n
    -As diferentes cores dos pontos no gr√°fico indicam os n√≠veis de profici√™ncia, conforme a legenda de cores √† direita.\n
    -Cores Azuis: Indicam os munic√≠pios com as melhores notas de profici√™ncia, situando-se entre 0,60 e 0,70.\n
    -Cores Vermelhas: Indicam os munic√≠pios com as piores notas de profici√™ncia, situando-se entre 0,43 e 0,50.
    ''')

st.subheader('Arvore de Decis√£o')
# Define the features and the target
X = df[df.columns[3:-1]]
y = df[df.columns[-1]]

# Split the data into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a decision tree regressor and fit it to the training data
reg = DecisionTreeRegressor(max_depth=3, random_state=42)
reg.fit(X_train, y_train)

# Create a pandas DataFrame with feature importances
feature_importances = pd.DataFrame(reg.feature_importances_,
                                   index = X.columns,
                                   columns=['importance']).sort_values('importance', ascending=False)

st.info('Import√¢ncia das vari√°veis', icon='üìä')
# Display the feature importances in Streamlit
st.dataframe(feature_importances)

st.info('√Årvore de decis√£o', icon='üå≤')

# Create a larger figure
fig, ax = plt.subplots(figsize=(20, 20))

# Plot the decision tree with larger fonts
tree.plot_tree(reg, ax=ax, feature_names=X.columns, filled=True, fontsize=10)

# Show the plot in Streamlit
st.pyplot(fig)

st.info('Figura 2: √Årvore de Decis√£o')
st.markdown(''' **An√°lise da √Årvore de Decis√£o** \n
A figura 2 apresenta uma an√°lise com base em uma √°rvore de decis√£o, uma ferramenta de aprendizado de m√°quina usada para tomar decis√µes baseadas em dados. O objetivo da √°rvore de decis√£o √© modelar e prever um valor de sa√≠da com base em diversas vari√°veis de entrada. \n
Na parte superior da figura 2, temos uma tabela que lista a import√¢ncia das vari√°veis utilizadas no modelo. A import√¢ncia de uma vari√°vel √© uma medida de quanto essa vari√°vel contribui para a predi√ß√£o do modelo. Essa tabela indica que a vari√°vel SAEPE - Participa√ß√£o √© a mais importante para o modelo, seguida pela Ades√£o ao Programa Crian√ßa Alfabetizada e Ades√£o ao Compromisso Nacional Crian√ßa Alfabetizada. Outras vari√°veis: 0 (n√£o tiveram contribui√ß√£o significativa no modelo). 
''')
st.markdown(''' **Interpreta√ß√£o da √Årvore de Decis√£o** \n
A √°rvore de decis√£o est√° representada graficamente logo abaixo da tabela. Para interpretar a √°rvore, siga estas etapas:\n
-Raiz da √Årvore: A √°rvore come√ßa com a vari√°vel mais importante, que √© a SAEPE - Participa√ß√£o. O n√≥ raiz divide os dados em duas partes com base em um valor de limiar para esta vari√°vel (<= 0.945).\n
-N√≥dulos e Ramifica√ß√µes: Cada n√≥ da √°rvore representa uma decis√£o baseada em um valor limiar de uma vari√°vel. Por exemplo, no segundo n√≠vel da √°rvore, para os dados que t√™m SAEPE - Participa√ß√£o menor ou igual a 0.945, a pr√≥xima divis√£o √© baseada na Ades√£o ao Compromisso Nacional Crian√ßa Alfabetizada com um valor de corte de 0.5.\n
-Folhas: As folhas da √°rvore (os n√≥s finais) representam as predi√ß√µes finais do modelo. Cada folha mostra a m√©dia dos valores de sa√≠da dos exemplos que chegaram a esse n√≥, o erro quadrado m√©dio (squared error), o n√∫mero de amostras (samples), e o valor previsto (value).\n

A √°rvore de decis√£o mostra que a SAEPE - Participa√ß√£o √© a vari√°vel mais influente na predi√ß√£o do modelo, seguida pela Ades√£o ao Programa Crian√ßa Alfabetizada e Ades√£o ao Compromisso Nacional Crian√ßa Alfabetizada. As outras vari√°veis n√£o tiveram impacto significativo nas previs√µes. A an√°lise das subdivis√µes e folhas finais da √°rvore ajuda a entender como diferentes n√≠veis de participa√ß√£o e ades√£o aos programas influenciam o valor previsto.
''')